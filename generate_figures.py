import matplotlib.pyplot as plt
import numpy as np

# Example data: replace these with your actual lists
sine_fourier_loss = [3.5067051639556883, 2.1734016980171202, 2.0910660002708434, 2.052930548667908, 1.9983764499664307, 1.987673893928528, 1.962809487056732, 33.126819050598144, 30.464327196884156, 2.183936856842041, 2.037139792633057, 1.9590806507110596, 1.9358799921035768, 1.8919422456741333, 1.8889443181037904, 1.8366601870536805, 1.8321563796043396, 1.8229346813201903, 1.8126487666130067, 1.8347154560089112, 1.8437178002357484, 1.785683229637146, 1.7935155923843384, 1.785593440055847, 1.8038526978492737, 1.7676077632904053, 1.7784133428573607, 1.8127739737510682, 1.7918018567085265, 1.7431897850036622, 1.7631029007911683, 1.7716437200546264, 1.7301403339385986, 1.7496411375045777, 1.7574370972633362, 1.7709323945045472, 1.7507797165870667, 1.7344347337722779, 1.7321845907211304, 1.736079438495636, 1.7460629804611205, 1.7402647500991821, 1.739767757320404, 1.7286089517593384, 1.7301264848709106, 1.7344471607208252, 1.7320938668251038, 1.7339437792778014, 1.6974916207313537, 1.7273410474777222, 1.715996225643158, 1.7116913941383363, 1.730768799972534, 1.7056811049461365, 1.6871390697479247, 1.7113776394844056, 1.7129160691261291, 1.6991939345359803, 1.7046218838691711, 1.6710862356185914, 1.7017192908287049, 1.7128606344223023, 1.68208940410614, 1.6976964139938355, 1.6851819373130799, 1.6996233434677124, 1.6886756447792053, 1.6987971858024598, 1.683344779777527, 1.674875620365143]
sine_fourier_lr = [0.00010000000000000002, 0.0001214285714285714, 0.0001428571428571429, 0.00016428571428571425, 0.00018571428571428577, 0.00020714285714285713, 0.00022857142857142865, 0.00025000000000000006, 0.00025000000000000006, 0.00024987413331766434, 0.0002494967867494049, 0.0002488687202209919, 0.0002479911985748288, 0.000246865989022728, 0.0002454953575869817, 0.0002438820645368942, 0.00024202935882996717, 0.00023994097156893136, 0.00023762110848780243, 0.00023507444148209222, 0.0002323060992002333, 0.0002293216567151629, 0.0002261271242968684, 0.00022272893530850374, 0.00021913393325045138, 0.00021534935797842394, 0.0002113828311233581, 0.0002072423407424641, 0.00020293622523234175, 0.00019847315653655917, 0.00019386212268151287, 0.00018911240967573834, 0.0001842335828091249, 0.00017923546738969482, 0.00017412812895674048, 0.00016892185301016794, 0.00016362712429686852, 0.00015825460569583442, 0.00015281511674453935, 0.00014731961184982962, 0.00014177915822720702, 0.00013620491361292922, 0.0001306081037938144, 0.00012500000000000006, 0.00011939189620618569, 0.00011379508638707083, 0.00010822084177279312, 0.00010268038815017047, 9.718488325546072e-05, 9.174539430416566e-05, 8.637287570313164e-05, 8.107814698983225e-05, 7.587187104325961e-05, 7.076453261030528e-05, 6.576641719087521e-05, 6.0887590324261785e-05, 5.613787731848724e-05, 5.152684346344091e-05, 4.706377476765836e-05, 4.275765925753596e-05, 3.861716887664195e-05, 3.465064202157609e-05, 3.086606674954866e-05, 2.7271064691496294e-05, 2.38728757031316e-05, 2.067834328483718e-05, 1.7693900799766747e-05, 1.4925558517907755e-05, 1.2378891512197626e-05, 1.0059028431068685e-05]
sine_loss = [3.279710297012329, 1.8121972573280334, 1.7421881249427795, 1.6890173468589782, 1.6595767130851746, 1.6546372393608093, 1.5974779981613159, 1.5789159013748169, 1.5700758767127991, 1.5602644516944886, 1.5603579122543334, 1.5475600149154662, 1.5323166063308715, 1.5156346148490907, 1.5556888097763062, 1.5147937849998474, 1.5247200889587402, 1.515454318332672, 1.5121900321006776, 1.5122042697906495, 1.5046511024475098, 1.519684381389618, 1.5000821627616883, 1.5024983513832093, 1.4895771970748901, 1.4805123727798462, 1.492673269557953, 1.486120004272461, 1.485102554988861, 1.4653401665687562, 1.4689888924598693, 1.4547522302627562, 1.4466525361061096, 1.46283462266922, 1.4742880547523498, 1.4525312685966492, 1.4506396035194398, 1.4334994704246522, 1.479126164340973, 1.4644685529708863, 1.4618588823318481, 1.4333638560295106, 1.432436155128479, 1.4514676601409913, 1.440475169467926, 1.4485173879623414, 1.439118538093567, 1.4367023571968078, 1.4420987384796142, 1.4302235356330872, 1.427113999557495, 1.434405318069458, 1.423392877292633, 1.4242192427635192, 1.442087106323242, 1.4244416231155395, 1.4199925018310546, 1.4310508545875549, 1.435012085723877, 1.4224432433128358, 1.4215978580474853, 1.401553432559967, 1.4173001802444458, 1.4262700101852417, 1.426640081691742, 1.4000098838806152, 1.4342241764068604, 1.4222091785430908, 1.419545942592621, 1.4113267016410829]
sine_lr = [0.00010000000000000002, 0.0001214285714285714, 0.0001428571428571429, 0.00016428571428571425, 0.00018571428571428577, 0.00020714285714285713, 0.00022857142857142865, 0.00025000000000000006, 0.00025000000000000006, 0.00024987413331766434, 0.0002494967867494049, 0.0002488687202209919, 0.0002479911985748288, 0.000246865989022728, 0.0002454953575869817, 0.0002438820645368942, 0.00024202935882996717, 0.00023994097156893136, 0.00023762110848780243, 0.00023507444148209222, 0.0002323060992002333, 0.0002293216567151629, 0.0002261271242968684, 0.00022272893530850374, 0.00021913393325045138, 0.00021534935797842394, 0.0002113828311233581, 0.0002072423407424641, 0.00020293622523234175, 0.00019847315653655917, 0.00019386212268151287, 0.00018911240967573834, 0.0001842335828091249, 0.00017923546738969482, 0.00017412812895674048, 0.00016892185301016794, 0.00016362712429686852, 0.00015825460569583442, 0.00015281511674453935, 0.00014731961184982962, 0.00014177915822720702, 0.00013620491361292922, 0.0001306081037938144, 0.00012500000000000006, 0.00011939189620618569, 0.00011379508638707083, 0.00010822084177279312, 0.00010268038815017047, 9.718488325546072e-05, 9.174539430416566e-05, 8.637287570313164e-05, 8.107814698983225e-05, 7.587187104325961e-05, 7.076453261030528e-05, 6.576641719087521e-05, 6.0887590324261785e-05, 5.613787731848724e-05, 5.152684346344091e-05, 4.706377476765836e-05, 4.275765925753596e-05, 3.861716887664195e-05, 3.465064202157609e-05, 3.086606674954866e-05, 2.7271064691496294e-05, 2.38728757031316e-05, 2.067834328483718e-05, 1.7693900799766747e-05, 1.4925558517907755e-05, 1.2378891512197626e-05, 1.0059028431068685e-05]
fourier_loss = [2.8299638147354127, 2.081615791893005, 2.0019785680770874, 1.9903084854125976, 1.9600869703292847, 1.9123593710899354, 1.8986534961700439, 1.874665281009674, 1.8689917572975159, 1.8466578814506531, 1.8522847968101501, 1.8755468039512635, 1.7937619340896607, 1.7949373483657838, 1.759259580039978, 1.7707746397018433, 1.775288680267334, 1.7421569158554078, 1.7473482644081115, 1.79378948802948, 1.7378273976325989, 1.7214923848152162, 1.7749359570503236, 1.7398333201408387, 1.738421162891388, 1.7221287831306458, 1.7182777408599854, 1.7232306980133056, 1.7266747499465942, 1.6892338963508606, 1.7042508378982544, 1.6961148740768432, 1.7339988208770751, 1.6790827139854432, 1.6916823693275451, 1.6663675137519836, 1.6929908444404602, 1.6902398786544799, 1.6997077179908753, 1.674952707862854, 1.6628882472038269, 1.6652518491744994, 1.6512880835533141, 1.6798762892723083, 1.6785325038909913, 1.65908387298584, 1.6784630940437317, 1.6607101333618164, 1.677654507637024, 1.6496358246803284, 1.6651855109214784, 1.6763762636184691, 1.6554007037162781, 1.6563567116737365, 1.6510785202026368, 1.6412648573875428, 1.6459723836898803, 1.6483750820159913, 1.6302974125862122, 1.6521394660949706, 1.6235952906608582, 1.6249982942581176, 1.6226977537155152, 1.6513217469215393, 1.6440519768714905, 1.614360410118103, 1.6250937503814697, 1.609034030342102, 1.6312114555358888, 1.6524704776763917]
fourier_lr = [0.00010000000000000002, 0.0001214285714285714, 0.0001428571428571429, 0.00016428571428571425, 0.00018571428571428577, 0.00020714285714285713, 0.00022857142857142865, 0.00025000000000000006, 0.00025000000000000006, 0.00024987413331766434, 0.0002494967867494049, 0.0002488687202209919, 0.0002479911985748288, 0.000246865989022728, 0.0002454953575869817, 0.0002438820645368942, 0.00024202935882996717, 0.00023994097156893136, 0.00023762110848780243, 0.00023507444148209222, 0.0002323060992002333, 0.0002293216567151629, 0.0002261271242968684, 0.00022272893530850374, 0.00021913393325045138, 0.00021534935797842394, 0.0002113828311233581, 0.0002072423407424641, 0.00020293622523234175, 0.00019847315653655917, 0.00019386212268151287, 0.00018911240967573834, 0.0001842335828091249, 0.00017923546738969482, 0.00017412812895674048, 0.00016892185301016794, 0.00016362712429686852, 0.00015825460569583442, 0.00015281511674453935, 0.00014731961184982962, 0.00014177915822720702, 0.00013620491361292922, 0.0001306081037938144, 0.00012500000000000006, 0.00011939189620618569, 0.00011379508638707083, 0.00010822084177279312, 0.00010268038815017047, 9.718488325546072e-05, 9.174539430416566e-05, 8.637287570313164e-05, 8.107814698983225e-05, 7.587187104325961e-05, 7.076453261030528e-05, 6.576641719087521e-05, 6.0887590324261785e-05, 5.613787731848724e-05, 5.152684346344091e-05, 4.706377476765836e-05, 4.275765925753596e-05, 3.861716887664195e-05, 3.465064202157609e-05, 3.086606674954866e-05, 2.7271064691496294e-05, 2.38728757031316e-05, 2.067834328483718e-05, 1.7693900799766747e-05, 1.4925558517907755e-05, 1.2378891512197626e-05, 1.0059028431068685e-05]


# base_loss_2 = [1.4654422892570496, 1.4699679067611695, 1.4902376502990722, 1.457822601032257, 1.4669232909202576, 1.4833818862915038, 1.4942727818489074, 1.4970826760292053, 1.4587893988609313, 1.4598989768028259, 1.4626659284591674, 1.464051323890686, 1.487297915840149, 1.46589974899292, 1.4575015195846557, 1.4639703188896178, 1.4762251941680908, 1.445238658618927, 1.4646235497474671, 1.446940885257721, 1.4367631298065187, 1.4467568601608276, 1.4442259536743165, 1.4641137516975402, 1.432659128856659, 1.428645509338379, 1.4453870587348938, 1.442564133167267, 1.432952229976654, 1.4054988035202027, 1.426658714389801, 1.4137104688644409, 1.4177757399559021, 1.4410769767761231, 1.4429712008476256, 1.4155130689620972, 1.4093767806053161, 1.403883697605133, 1.38236698179245, 1.3938466817855835, 1.4086801636695863, 1.3742859964370728, 1.390899827194214, 1.4122446133613586, 1.4001785911560058, 1.4098089385986328, 1.4007239424705504, 1.3887036018371581, 1.3928372301101684, 1.4003838342666626, 1.3844555842399597]
# base_lr_2 = [0.00010000000000000002, 0.00013, 0.00016, 0.00019000000000000004, 0.00022000000000000012, 0.00025000000000000006, 0.00025000000000000006, 0.00024976291609213054, 0.000249052563708992, 0.0002478716374604877, 0.0002462246170043762, 0.00024411775005339463, 0.00024155902867554447, 0.00023855815897744047, 0.0002351265242857231, 0.00023127714196620176, 0.00022702461404452775, 0.0002223850718157089, 0.00021737611465258243, 0.00021201674324536584, 0.00020632728752553034, 0.00020032932954740706, 0.00019404562162006323, 0.00018749999999999998, 0.0001807172944720673, 0.00017372323416158487, 0.0001665443499349574, 0.00015920787375901032, 0.00015174163540081218, 0.00014417395685983569, 0.0001365335449329127, 0.00012884938231952123, 0.00012115061768047868, 0.00011346645506708726, 0.00010582604314016435, 9.825836459918782e-05, 9.079212624098967e-05, 8.345565006504255e-05, 7.627676583841506e-05, 6.928270552793267e-05, 6.249999999999995e-05, 5.595437837993675e-05, 4.967067045259295e-05, 4.367271247446972e-05, 3.798325675463417e-05, 3.262388534741763e-05, 2.7614928184291176e-05, 2.297538595547229e-05, 1.872285803379822e-05, 1.4873475714276932e-05, 1.144184102255954e-05]
# base_loss_1 = [2.748516582489014, 1.8221388460159302, 1.6851901284217834, 1.6272569741249086, 1.604212839412689, 1.540787357521057, 1.5336238619804383, 1.5460133724212646, 1.52025371799469, 1.5263088541030885, 1.4861773938179017, 1.4937870070457457, 1.4865284880638123, 1.4791135434150695, 1.4716764885902405, 1.4434120389938354, 1.4472353155136108, 1.4428591997146607, 1.4507340210914612]
# base_lr_1 = [0.00010000000000000002, 0.00025000000000000006, 0.00025000000000000006, 0.0002482951629253403, 0.00024322715521257933, 0.0002349342189008111, 0.00022364256367454928, 0.0002096601964532176, 0.00019336851976530344, 0.0001752119280816212, 0.0001556856858925999, 0.00013532241818404157, 0.00011467758181595849, 9.431431410740012e-05, 7.478807191837882e-05, 5.663148023469662e-05, 4.033980354678239e-05, 2.6357436325450812e-05, 1.5065781099188876e-05]
# base_loss = base_loss_1 + base_loss_2
# base_lr = base_lr_1 + base_lr_2

base_loss = [2.748516582489014, 1.8221388460159302, 1.6851901284217834, 1.6272569741249086, 1.604212839412689, 1.540787357521057, 1.5336238619804383, 1.5460133724212646, 1.52025371799469, 1.5263088541030885, 1.4861773938179017, 1.4937870070457457, 1.4865284880638123, 1.4791135434150695, 1.4716764885902405, 1.4434120389938354, 1.4472353155136108, 1.4428591997146607, 1.4507340210914612, 1.4654422892570496, 1.4699679067611695, 1.4902376502990722, 1.457822601032257, 1.4669232909202576, 1.4833818862915038, 1.4942727818489074, 1.4970826760292053, 1.4587893988609313, 1.4598989768028259, 1.4626659284591674, 1.464051323890686, 1.487297915840149, 1.46589974899292, 1.4575015195846557, 1.4639703188896178, 1.4762251941680908, 1.445238658618927, 1.4646235497474671, 1.446940885257721, 1.4367631298065187, 1.4467568601608276, 1.4442259536743165, 1.4641137516975402, 1.432659128856659, 1.428645509338379, 1.4453870587348938, 1.442564133167267, 1.432952229976654, 1.4054988035202027, 1.426658714389801, 1.4137104688644409, 1.4177757399559021, 1.4410769767761231, 1.4429712008476256, 1.4155130689620972, 1.4093767806053161, 1.403883697605133, 1.38236698179245, 1.3938466817855835, 1.4086801636695863, 1.3742859964370728, 1.390899827194214, 1.4122446133613586, 1.4001785911560058, 1.4098089385986328, 1.4007239424705504, 1.3887036018371581, 1.3928372301101684, 1.4003838342666626, 1.3844555842399597]

base_lr = [0.00010000000000000002, 0.00025000000000000006, 0.00025000000000000006, 0.0002482951629253403, 0.00024322715521257933, 0.0002349342189008111, 0.00022364256367454928, 0.0002096601964532176, 0.00019336851976530344, 0.0001752119280816212, 0.0001556856858925999, 0.00013532241818404157, 0.00011467758181595849, 9.431431410740012e-05, 7.478807191837882e-05, 5.663148023469662e-05, 4.033980354678239e-05, 2.6357436325450812e-05, 1.5065781099188876e-05, 0.00010000000000000002, 0.00013, 0.00016, 0.00019000000000000004, 0.00022000000000000012, 0.00025000000000000006, 0.00025000000000000006, 0.00024976291609213054, 0.000249052563708992, 0.0002478716374604877, 0.0002462246170043762, 0.00024411775005339463, 0.00024155902867554447, 0.00023855815897744047, 0.0002351265242857231, 0.00023127714196620176, 0.00022702461404452775, 0.0002223850718157089, 0.00021737611465258243, 0.00021201674324536584, 0.00020632728752553034, 0.00020032932954740706, 0.00019404562162006323, 0.00018749999999999998, 0.0001807172944720673, 0.00017372323416158487, 0.0001665443499349574, 0.00015920787375901032, 0.00015174163540081218, 0.00014417395685983569, 0.0001365335449329127, 0.00012884938231952123, 0.00012115061768047868, 0.00011346645506708726, 0.00010582604314016435, 9.825836459918782e-05, 9.079212624098967e-05, 8.345565006504255e-05, 7.627676583841506e-05, 6.928270552793267e-05, 6.249999999999995e-05, 5.595437837993675e-05, 4.967067045259295e-05, 4.367271247446972e-05, 3.798325675463417e-05, 3.262388534741763e-05, 2.7614928184291176e-05, 2.297538595547229e-05, 1.872285803379822e-05, 1.4873475714276932e-05, 1.144184102255954e-05]

compressed_loss = [np.float64(2.3197195045471193), np.float64(1.7820675436973572), np.float64(1.7032850696563722), np.float64(1.6784850861549376), np.float64(1.6517167452812196), np.float64(1.6242906174659728), np.float64(1.579202931022644), np.float64(1.5698565896987915), np.float64(1.5739936079978942), np.float64(1.5633367384910584), np.float64(1.5300931250572205), np.float64(1.5465293993949891), np.float64(1.5096892729759217), np.float64(1.5062430948257446), np.float64(1.5231079042434692), np.float64(1.5037835176467895), np.float64(1.5137826159477235), np.float64(1.506239088153839), np.float64(1.4671880011558533), np.float64(1.4890968160629272)]
compressed_lr = [np.float64(0.00010000000000000002), np.float64(0.000175), np.float64(0.00025000000000000006), np.float64(0.00025000000000000006), np.float64(0.00024846104257439215), np.float64(0.0002438820645368942), np.float64(0.0002363758155235459), np.float64(0.0002261271242968684), np.float64(0.00021338834764831846), np.float64(0.00019847315653655917), np.float64(0.00018174881246744336), np.float64(0.0001636271242968684), np.float64(0.0001445543081300289), np.float64(0.00012500000000000003), np.float64(0.00010544569186997119), np.float64(8.637287570313158e-05), np.float64(6.825118753255664e-05), np.float64(5.1526843463440884e-05), np.float64(3.661165235168156e-05), np.float64(2.3872875703131575e-05)]

base_loss_no_outlier = [l for i, l in enumerate(base_loss) if i not in [7, 8]]
sine_fourier_loss_no_outlier = [l for i, l in enumerate(sine_fourier_loss) if i not in [7, 8]]
fourier_loss_no_outlier = [l for i, l in enumerate(fourier_loss) if i not in [7, 8]]
sine_loss_no_outlier = [l for i, l in enumerate(sine_loss) if i not in [7, 8]]


# Make sure all lists are the same length
print("lengths", [len(l) for l in [base_loss, sine_loss, fourier_loss, sine_fourier_loss, base_lr, sine_lr, fourier_lr, sine_fourier_lr]])
epochs = range(1, len(base_loss) + 1)
epochs_short = range(1, len(compressed_loss) +1)
epochs_no_outlier = [l for i, l in enumerate(epochs) if i not in [7, 8]]

plt.figure(figsize=(8, 5))
plt.plot(epochs, base_loss,    marker='o', label='Base DDPM')
plt.plot(epochs, sine_loss,    marker='o', label='Sine Activation Model')
plt.plot(epochs, fourier_loss, marker='o', label='Fourier I/O Model')
plt.plot(epochs, sine_fourier_loss,  marker='o', label='Sine + Fourier I/O Model')
plt.plot(epochs_short, compressed_loss,  marker='o', label='Compressed Fourier I/O Model')

plt.xlabel('Epoch')
plt.ylabel('Average Loss')
plt.title('Training Loss per Epoch Across Model Variants')
plt.legend(title='Model Variant')
plt.grid(True)
plt.tight_layout()
plt.show()

plt.figure(figsize=(8, 5))
plt.plot(epochs, base_loss,    marker='o', label='Base DDPM')
plt.plot(epochs, sine_loss,    marker='o', label='Sine Activation Model')
plt.plot(epochs, fourier_loss, marker='o', label='Fourier I/O Model')
plt.plot(epochs_no_outlier, sine_fourier_loss_no_outlier,  marker='o', label='Sine + Fourier I/O Model')
plt.plot(epochs_short, compressed_loss,  marker='o', label='Compressed Fourier I/O Model')


plt.xlabel('Epoch')
plt.ylabel('Average Loss')
plt.title('Training Loss per Epoch Across Model Variants w/o outlier')
plt.legend(title='Model Variant')
plt.grid(True)
plt.tight_layout()
plt.show()

# plt.figure(figsize=(8, 5))
# plt.plot(epochs, base_loss,    marker='o', label='Base DDPM')
# plt.plot(epochs, sine_loss,    marker='o', label='Sine Activation Model')
# plt.plot(epochs, fourier_loss, marker='o', label='Fourier I/O Model')
# # plt.plot(epochs, sine_fourier_loss,  marker='o', label='Sine + Fourier I/O Model')

# plt.xlabel('Epoch')
# plt.ylabel('Average Loss')
# plt.title('Training Loss per Epoch Across Model Variants')
# plt.legend(title='Model Variant')
# plt.grid(True)
# plt.tight_layout()
# plt.show()

# plt.figure(figsize=(8, 5))
# # plt.plot(epochs, base_loss,    marker='o', label='Base DDPM')
# # plt.plot(epochs, sine_loss,    marker='o', label='Sine Activation Model')
# plt.plot(epochs, fourier_loss, marker='o', label='Fourier I/O Model')
# plt.plot(epochs, sine_fourier_loss,  marker='o', label='Sine + Fourier I/O Model')

# plt.xlabel('Epoch')
# plt.ylabel('Average Loss')
# plt.title('Training Loss per Epoch Across Model Variants')
# plt.legend(title='Model Variant')
# plt.grid(True)
# plt.tight_layout()
# plt.show()

plt.figure(figsize=(8, 5))
plt.plot(epochs, base_lr,    marker='o', label='Base DDPM')
plt.plot(epochs, sine_lr,    marker='o', label='Sine Activation Model')
plt.plot(epochs, fourier_lr, marker='o', label='Fourier I/O Model')
plt.plot(epochs, sine_fourier_lr,  marker='o', label='Sine + Fourier I/O Model')
plt.plot(epochs_short, compressed_lr,  marker='o', label='Compressed Fourier I/O Model')


plt.xlabel('Epoch')
plt.ylabel('Average Learning Rate')
plt.title('Learning Rate per Epoch Across Model Variants')
plt.legend(title='Model Variant')
plt.grid(True)
plt.tight_layout()
plt.show()


# plt.figure(figsize=(8, 5))
# # plt.plot(epochs, base_lr,    marker='o', label='Base DDPM')
# # plt.plot(epochs, sine_lr,    marker='o', label='Sine Activation Model')
# plt.plot(epochs, fourier_lr, marker='o', label='Fourier I/O Model')
# plt.plot(epochs, sine_fourier_lr,  marker='o', label='Sine + Fourier I/O Model')

# plt.xlabel('Epoch')
# plt.ylabel('Average Learning Rate')
# plt.title('Learning Rate per Epoch Across Model Variants')
# plt.legend(title='Model Variant')
# plt.grid(True)
# plt.tight_layout()
# plt.show()
